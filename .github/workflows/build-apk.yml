name: Build Android APK - Marina Hotel

on:
  push:
    branches: [ main, develop, 'capy/*' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./app-marina
    
    steps:
      # 1. Checkout Repository
      - name: Checkout code
        uses: actions/checkout@v4
        
      # 2. Setup JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      # 3. Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      # 4. Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      # 5. Cache Gradle packages
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            app-marina/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('app-marina/**/*.gradle*', 'app-marina/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      # 6. Clean project
      - name: Clean project
        run: ./gradlew clean --stacktrace
        
      # 7. Build Debug APK
      - name: Build Debug APK
        run: ./gradlew :app:assembleDebug --stacktrace
        
      # 8. Setup Keystore (if secrets are available)
      - name: Setup Keystore for Signing
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        run: |
          mkdir -p keystore
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore/marina-hotel-keystore.jks
          echo "storeFile=keystore/marina-hotel-keystore.jks" >> key.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> key.properties
          
      # 9. Build Release APK (signed if keystore available)
      - name: Build Release APK
        run: ./gradlew :app:assembleRelease --stacktrace
        
      # 10. Get Build Information
      - name: Get build information
        id: build_info
        run: |
          VERSION_NAME=$(grep 'versionName = ' app/build.gradle.kts | cut -d'"' -f2 || echo "1.0")
          VERSION_CODE=$(grep 'versionCode = ' app/build.gradle.kts | cut -d'=' -f2 | tr -d ' ' || echo "1")
          BUILD_TIME=$(date '+%Y%m%d_%H%M%S')
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
          echo "build_time=$BUILD_TIME" >> $GITHUB_OUTPUT
          echo "📱 Version: $VERSION_NAME ($VERSION_CODE)"
          echo "🕒 Build Time: $BUILD_TIME"
        
      # 11. Rename APK files
      - name: Rename APK files
        run: |
          VERSION_NAME="${{ steps.build_info.outputs.version_name }}"
          BUILD_TIME="${{ steps.build_info.outputs.build_time }}"
          
          mkdir -p apk-outputs
          
          # Copy and rename Debug APK
          if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
            cp app/build/outputs/apk/debug/app-debug.apk \
               apk-outputs/marina-hotel-debug-v${VERSION_NAME}-${BUILD_TIME}.apk
            echo "✅ Debug APK created"
          fi
          
          # Copy and rename Release APK
          if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
            cp app/build/outputs/apk/release/app-release.apk \
               apk-outputs/marina-hotel-release-v${VERSION_NAME}-${BUILD_TIME}.apk
            echo "✅ Release APK created (signed)"
          elif [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            cp app/build/outputs/apk/release/app-release-unsigned.apk \
               apk-outputs/marina-hotel-release-unsigned-v${VERSION_NAME}-${BUILD_TIME}.apk
            echo "⚠️ Release APK created (unsigned)"
          fi
          
          # List created files
          echo "📦 Generated APK files:"
          ls -la apk-outputs/
          
      # 12. Upload Debug APK
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: marina-hotel-debug-apk
          path: app-marina/apk-outputs/*debug*.apk
          retention-days: 30
          
      # 13. Upload Release APK
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: marina-hotel-release-apk
          path: app-marina/apk-outputs/*release*.apk
          retention-days: 90
          
      # 14. Create Release (on tag push)
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          name: Marina Hotel App v${{ steps.build_info.outputs.version_name }}
          body: |
            ## 📱 Marina Hotel Management App
            
            **Release Details:**
            - Version: ${{ steps.build_info.outputs.version_name }} (Build ${{ steps.build_info.outputs.version_code }})
            - Build Time: ${{ steps.build_info.outputs.build_time }}
            - Commit: ${{ github.sha }}
            
            **Download:**
            - Release APK (recommended for production)
            - Debug APK (for testing)
            
            **Requirements:**
            - Android 7.0+ (API 24)
            - Storage: ~50MB
            
            **Features:**
            ✅ Hotel room management
            ✅ Booking & reservation system  
            ✅ Payment & billing
            ✅ Comprehensive reports
            ✅ Offline support with sync
            
            ---
            *Auto-generated by GitHub Actions 🤖*
          files: app-marina/apk-outputs/*.apk
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # 15. Build Status Summary
      - name: Build notification and summary
        if: always()
        run: |
          echo "## 🏗️ Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Item | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Build Status | ${{ job.status == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Version | ${{ steps.build_info.outputs.version_name }} (${{ steps.build_info.outputs.version_code }}) |" >> $GITHUB_STEP_SUMMARY
          echo "| Build Time | ${{ steps.build_info.outputs.build_time }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Debug APK | $([ -f 'apk-outputs/*debug*.apk' ] && echo '✅ Generated' || echo '❌ Failed') |" >> $GITHUB_STEP_SUMMARY
          echo "| Release APK | $([ -f 'apk-outputs/*release*.apk' ] && echo '✅ Generated' || echo '❌ Failed') |" >> $GITHUB_STEP_SUMMARY
          echo "| Signing | ${{ secrets.KEYSTORE_BASE64 != '' && '🔐 Signed' || '⚠️ Unsigned' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Artifacts:** Check the Actions artifacts section to download APK files" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ job.status }}" = "success" ]; then
            echo "🎉 Build completed successfully!"
            echo "📦 APK files are ready for download"
          else
            echo "❌ Build failed. Check the logs above for details."
          fi