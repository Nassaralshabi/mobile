
name: Build Marina Android APK

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release
      create_release:
        description: 'Create GitHub Release'
        required: false
        default: false
        type: boolean
  push:
    branches: [main]
    paths:
      - 'app-marina/**'

jobs:
  build-marina-apk:
    name: Build Marina Hotel Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            app-marina/.gradle
          key: >-
            ${{ runner.os }}-gradle-marina-${{
              hashFiles('app-marina/**/*.gradle*',
              'app-marina/gradle/wrapper/gradle-wrapper.properties')
            }}
          restore-keys: |
            ${{ runner.os }}-gradle-marina-

      - name: Grant Execute Permission for Gradlew
        working-directory: ./app-marina
        run: chmod +x gradlew

      - name: Validate Gradle Wrapper
        working-directory: ./app-marina
        run: |
          echo "🔍 Validating Gradle setup..."
          ./gradlew --version

      - name: Build Debug APK
        if: >-
          ${{ github.event.inputs.build_type == 'debug' ||
              github.event.inputs.build_type == '' }}
        working-directory: ./app-marina
        run: |
          echo "🔨 Building Marina Hotel Debug APK..."
          ./gradlew :app:assembleDebug --stacktrace
          echo "✅ Debug APK built successfully!"

      - name: Build Release APK
        if: ${{ github.event.inputs.build_type == 'release' }}
        working-directory: ./app-marina
        run: |
          echo "🔨 Building Marina Hotel Release APK..."
          ./gradlew :app:assembleRelease --stacktrace
          echo "✅ Release APK built successfully!"

      - name: List Generated APK Files
        working-directory: ./app-marina
        run: |
          echo "📱 Generated APK files:"
          find app/build/outputs/apk/ -name "*.apk" -exec ls -lh {} \;

      - name: Prepare APK for Upload
        working-directory: ./app-marina
        run: |
          echo "🏷️ Preparing APK files..."
          mkdir -p ../marina-apk-output

          VERSION_NAME="1.0"
          VERSION_CODE="1"
          BUILD_NUM=${{ github.run_number }}
          DATE=$(date +%Y%m%d)

          # Copy and rename APKs with meaningful names
          if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
            cp "app/build/outputs/apk/debug/app-debug.apk" \
            "../marina-apk-output/marina-hotel-v${VERSION_NAME}-debug-${DATE}-${BUILD_NUM}.apk"
            echo "✅ Debug APK ready"
          fi

          if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
            cp "app/build/outputs/apk/release/app-release-unsigned.apk" \
            "../marina-apk-output/marina-hotel-v${VERSION_NAME}-release-${DATE}-${BUILD_NUM}.apk"
            echo "✅ Release APK ready"
          fi

          if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
            cp "app/build/outputs/apk/release/app-release.apk" \
            "../marina-apk-output/marina-hotel-v${VERSION_NAME}-release-signed-${DATE}-${BUILD_NUM}.apk"
            echo "✅ Signed Release APK ready"
          fi

          echo "📦 Final APK files:"
          ls -lh ../marina-apk-output/

      - name: Upload APK Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: marina-hotel-android-apk-${{ github.run_number }}
          path: marina-apk-output/
          retention-days: 30

      - name: Create GitHub Release
        if: >-
          ${{ github.event.inputs.create_release == 'true' &&
              github.event.inputs.build_type == 'release' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: marina-android-v${{ github.run_number }}
          name: Marina Hotel Android App v${{ github.run_number }}
          files: marina-apk-output/*.apk
          body: |
            ## 🏨 Marina Hotel Android App

            **Native Android Application** - Built with Kotlin

            ### 📱 App Information:
            - **Package:** com.hotel.management
            - **Version:** 1.0 (Build ${{ github.run_number }})
            - **Min SDK:** API 24 (Android 7.0)
            - **Target SDK:** API 34 (Android 14)
            - **Architecture:** MVVM + Repository Pattern
            - **Database:** Room (Offline-first)

            ### ✨ Features:
            - 🏨 Hotel Management System
            - 📊 Dashboard with Statistics
            - 💾 Offline-first with Room Database
            - 🔄 Sync Ready (WorkManager + Retrofit)
            - 🎨 Material Design 3 UI
            - 🔒 Secure Data Storage

            ### 📥 Installation:
            1. Download the APK file below
            2. Enable "Install from Unknown Sources" on Android
            3. Install the APK
            4. Launch Marina Hotel app

            ### 🔧 Build Information:
            - **Build Date:** $(date)
            - **Build Number:** ${{ github.run_number }}
            - **Commit:** ${{ github.sha }}
            - **Java Version:** 17
            - **Kotlin Version:** 1.9.24
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Summary
        run: |
          echo "## 🏨 Marina Hotel Android APK Build Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ Build Information:" >> $GITHUB_STEP_SUMMARY
          echo "- **App:** Marina Hotel Native Android" >> $GITHUB_STEP_SUMMARY
          echo "- **Package:** com.hotel.management" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Type:** ${{ github.event.inputs.build_type || 'debug' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Java Version:** 17" >> $GITHUB_STEP_SUMMARY
          echo "- **Kotlin Version:** 1.9.24" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🏗️ Architecture:" >> $GITHUB_STEP_SUMMARY
          echo "- **Pattern:** MVVM + Repository" >> $GITHUB_STEP_SUMMARY
          echo "- **Database:** Room (Offline-first)" >> $GITHUB_STEP_SUMMARY
          echo "- **UI:** Material Design 3" >> $GITHUB_STEP_SUMMARY
          echo "- **Sync:** WorkManager + Retrofit Ready" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📱 Download APK:" >> $GITHUB_STEP_SUMMARY
          echo "Check the **Artifacts** section above to download your APK file" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎉 Ready for Installation!" >> $GITHUB_STEP_SUMMARY
          echo "Professional Marina Hotel management app ready for Android devices" >> $GITHUB_STEP_SUMMARY

  notify-result:
    name: Build Notification
    runs-on: ubuntu-latest
    needs: build-marina-apk
    if: always()

    steps:
      - name: Success Notification
        if: needs.build-marina-apk.result == 'success'
        run: |
          echo "🎉 SUCCESS: Marina Hotel Android APK built successfully!"
          echo "📱 Native Android app (Kotlin + MVVM) ready for download"
          echo "🏨 Professional hotel management system with offline capabilities"
          echo "✨ Modern Material Design 3 UI with Room database"

      - name: Failure Notification
        if: needs.build-marina-apk.result == 'failure'
        run: |
          echo "❌ FAILED: Marina Android APK build encountered errors"
          echo "🔍 Check the build logs above for Gradle/Kotlin issues"
          echo "💡 Common issues: dependency versions, Kotlin compilation, or Gradle configuration"
