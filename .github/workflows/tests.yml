name: 🧪 Tests & Code Quality

on:
  push:
    branches: [ main, develop, 'capy/**' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.24.5'
  JAVA_VERSION: '17'

jobs:
  # ====================================
  # Flutter Tests
  # ====================================
  flutter-tests:
    name: 🎯 Flutter Tests & Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true

    - name: 📦 Install Dependencies
      working-directory: mobile
      run: |
        flutter pub get
        flutter pub deps

    - name: 🔍 Flutter Analysis
      working-directory: mobile
      run: |
        echo "Running Flutter analyze..."
        flutter analyze --no-fatal-infos

    - name: 📏 Check Formatting
      working-directory: mobile
      run: |
        echo "Checking code formatting..."
        dart format --set-exit-if-changed .

    - name: 🧪 Run Flutter Tests
      working-directory: mobile
      run: |
        echo "Running Flutter tests..."
        flutter test --coverage --reporter=json > test_results.json || true
        flutter test --coverage

    - name: 📊 Test Results Summary
      working-directory: mobile
      if: always()
      run: |
        echo "## 🎯 Flutter Test Results" >> $GITHUB_STEP_SUMMARY
        if [ -f "test_results.json" ]; then
          echo "Tests completed. Check logs for details." >> $GITHUB_STEP_SUMMARY
        else
          echo "No tests found or tests failed to run." >> $GITHUB_STEP_SUMMARY
        fi

    - name: 📤 Upload Test Coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: flutter-coverage
        path: mobile/coverage/
        retention-days: 30

  # ====================================
  # Android Tests
  # ====================================
  android-tests:
    name: 🤖 Android Tests & Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}

    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: 📦 Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          app-marina/.gradle
        key: gradle-test-${{ runner.os }}-${{ hashFiles('app-marina/**/*.gradle*') }}

    - name: 🔑 Make Gradlew Executable
      working-directory: app-marina
      run: chmod +x ./gradlew

    - name: 🧹 Clean Project
      working-directory: app-marina
      run: ./gradlew clean

    - name: 🔍 Android Lint Check
      working-directory: app-marina
      run: |
        echo "Running Android lint..."
        ./gradlew lintDebug --continue || true

    - name: 🧪 Run Unit Tests
      working-directory: app-marina
      run: |
        echo "Running Android unit tests..."
        ./gradlew testDebugUnitTest --continue || true

    - name: 🔧 Compile Check
      working-directory: app-marina
      run: |
        echo "Checking if project compiles..."
        ./gradlew compileDebugSources

    - name: 📊 Generate Test Reports
      working-directory: app-marina
      if: always()
      run: |
        echo "## 🤖 Android Test Results" >> $GITHUB_STEP_SUMMARY
        echo "Android build and tests completed." >> $GITHUB_STEP_SUMMARY
        
        # Check if lint report exists
        if [ -f "app/build/reports/lint-results-debug.html" ]; then
          echo "- ✅ Lint report generated" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Check if test reports exist
        if [ -d "app/build/reports/tests/" ]; then
          echo "- ✅ Unit test reports generated" >> $GITHUB_STEP_SUMMARY
        fi

    - name: 📤 Upload Android Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-reports
        path: |
          app-marina/app/build/reports/
          app-marina/app/build/test-results/
        retention-keys: 30

  # ====================================
  # Login Credentials Test
  # ====================================
  credentials-test:
    name: 🔐 Test Login Credentials Config
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 🔍 Check Flutter Login Configuration
      run: |
        echo "## 🔐 Login Credentials Configuration Check" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check Flutter login screen
        if grep -q "admin" mobile/lib/screens/login_screen.dart && grep -q "1234" mobile/lib/screens/login_screen.dart; then
          echo "- ✅ Flutter: Demo credentials display configured correctly" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ❌ Flutter: Demo credentials display NOT configured" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Check Flutter auth service
        if grep -q "admin.*1234\|username == 'admin' && password == '1234'" mobile/lib/services/auth_service.dart; then
          echo "- ✅ Flutter: Hardcoded admin/1234 authentication configured" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ❌ Flutter: Hardcoded admin/1234 authentication NOT configured" >> $GITHUB_STEP_SUMMARY
        fi

    - name: 🔍 Check Android Database Configuration
      run: |
        # Check Android database prepopulation
        if grep -q "admin.*1234\|username.*admin.*password.*1234" app-marina/app/src/main/java/com/hotel/management/database/HotelDatabase.kt; then
          echo "- ✅ Android: Admin user prepopulation configured" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ❌ Android: Admin user prepopulation NOT configured" >> $GITHUB_STEP_SUMMARY
        fi

    - name: 🔍 Check Navigation Fix
      run: |
        # Check Navigation Safe Args fix
        if grep -q 'android:defaultValue="0L"' app-marina/app/src/main/res/navigation/nav_graph.xml; then
          echo "- ✅ Android: Navigation Safe Args fix applied" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ❌ Android: Navigation Safe Args fix NOT applied" >> $GITHUB_STEP_SUMMARY
        fi

    - name: 🔍 Check API Mock
      run: |
        # Check mock API
        if [ -f "api/login.php" ] && grep -q "admin.*1234" api/login.php; then
          echo "- ✅ Mock API: admin/1234 endpoint configured" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ❌ Mock API: admin/1234 endpoint NOT found" >> $GITHUB_STEP_SUMMARY
        fi

  # ====================================
  # Security Scan
  # ====================================
  security-scan:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 🔍 Check for Hardcoded Secrets
      run: |
        echo "## 🛡️ Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Look for potential security issues (excluding our intentional admin/1234)
        echo "Scanning for potential security issues..." >> $GITHUB_STEP_SUMMARY
        
        # Check for other hardcoded passwords
        if grep -r -i "password.*=" --include="*.dart" --include="*.kt" --include="*.java" . | grep -v "admin.*1234" | grep -v "demo" | head -5; then
          echo "- ⚠️ Found potential hardcoded credentials (excluding admin/1234 demo)" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ✅ No unexpected hardcoded credentials found" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Check for API keys
        if grep -r -i "api.*key\|secret.*key" --include="*.dart" --include="*.kt" --include="*.java" . | head -3; then
          echo "- ⚠️ Found potential API keys - verify they are not sensitive" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ✅ No API keys found in source code" >> $GITHUB_STEP_SUMMARY
        fi

  # ====================================
  # Build Verification
  # ====================================
  build-check:
    name: 🏗️ Quick Build Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}

    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'

    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: 🔧 Flutter Build Check
      working-directory: mobile
      run: |
        flutter pub get
        yes | flutter doctor --android-licenses
        echo "Checking if Flutter app builds without errors..."
        flutter build apk --debug --no-shrink

    - name: 🔧 Android Build Check  
      working-directory: app-marina
      run: |
        chmod +x ./gradlew
        echo "Checking if Android app builds without errors..."
        ./gradlew assembleDebug

    - name: ✅ Build Summary
      run: |
        echo "## 🏗️ Build Verification Results" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Flutter app builds successfully" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Android app builds successfully" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ No build-breaking issues found" >> $GITHUB_STEP_SUMMARY