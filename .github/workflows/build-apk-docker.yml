name: Build APK with Docker

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release
  push:
    branches: [ main ]
    paths:
      - 'mobile/**'

jobs:
  build-apk:
    name: Build Marina Hotel APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Build APK with Flutter Docker
      run: |
        echo "🏨 Building Marina Hotel APK..."
        echo "📱 Build Type: ${{ github.event.inputs.build_type || 'debug' }}"
        
        # Use Flutter Docker image to build APK
        docker run --rm \
          -v $PWD:/workspace \
          -w /workspace/mobile \
          cirrusci/flutter:stable \
          sh -c "
            echo '📦 Getting dependencies...'
            flutter pub get
            
            echo '🔍 Running Flutter doctor...'
            flutter doctor -v
            
            echo '🔨 Building APK...'
            if [ '${{ github.event.inputs.build_type }}' = 'release' ]; then
              flutter build apk --release --verbose
            else
              flutter build apk --debug --verbose
            fi
            
            echo '✅ Build completed!'
            ls -la build/app/outputs/flutter-apk/
          "

    - name: Rename APK File
      run: |
        echo "🏷️ Preparing APK for download..."
        
        BUILD_TYPE="${{ github.event.inputs.build_type || 'debug' }}"
        DATE=$(date +%Y%m%d)
        BUILD_NUM=${{ github.run_number }}
        
        mkdir -p apk-output
        
        if [ "$BUILD_TYPE" = "release" ]; then
          APK_FILE="mobile/build/app/outputs/flutter-apk/app-release.apk"
          OUTPUT_NAME="marina-hotel-release-${DATE}-${BUILD_NUM}.apk"
        else
          APK_FILE="mobile/build/app/outputs/flutter-apk/app-debug.apk"
          OUTPUT_NAME="marina-hotel-debug-${DATE}-${BUILD_NUM}.apk"
        fi
        
        if [ -f "$APK_FILE" ]; then
          cp "$APK_FILE" "apk-output/$OUTPUT_NAME"
          echo "✅ APK ready: $OUTPUT_NAME"
          ls -lh apk-output/
        else
          echo "❌ APK file not found: $APK_FILE"
          exit 1
        fi

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: marina-hotel-apk-${{ github.run_number }}
        path: apk-output/
        retention-days: 30

    - name: Build Summary
      run: |
        echo "## 🏨 Marina Hotel APK Build Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Build Information:" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type:** ${{ github.event.inputs.build_type || 'debug' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Date:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 Download APK:" >> $GITHUB_STEP_SUMMARY
        echo "Check the **Artifacts** section above to download your APK file" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Installation Instructions:" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the APK from Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "2. Enable 'Unknown Sources' on Android device" >> $GITHUB_STEP_SUMMARY
        echo "3. Install the APK file" >> $GITHUB_STEP_SUMMARY
        echo "4. Enjoy Marina Hotel app! 🎉" >> $GITHUB_STEP_SUMMARY

  notify-completion:
    name: Build Notification
    runs-on: ubuntu-latest
    needs: build-apk
    if: always()
    
    steps:
    - name: Success Notification
      if: needs.build-apk.result == 'success'
      run: |
        echo "🎉 SUCCESS: Marina Hotel APK built successfully!"
        echo "📱 APK is ready for download from Artifacts"
        echo "🏨 Ready for installation on Android devices"
    
    - name: Failure Notification
      if: needs.build-apk.result == 'failure'
      run: |
        echo "❌ FAILED: APK build encountered errors"
        echo "🔍 Check the build logs above for details"
        echo "💡 Common issues: dependencies, Flutter version, or code errors"