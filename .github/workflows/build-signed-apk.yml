name: Build Signed APK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'beta'
        type: choice
        options:
          - alpha
          - beta
          - release

env:
  FLUTTER_VERSION: '3.24.0'
  JAVA_VERSION: '17'

jobs:
  build-signed-apk:
    name: Build Signed APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}

    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Setup Flutter SDK
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true

    - name: Generate Keystore
      run: |
        echo "🔐 Generating Marina Hotel keystore..."
        keytool -genkey -v \
          -keystore android/app/marina-hotel-key.jks \
          -keyalg RSA \
          -keysize 2048 \
          -validity 10000 \
          -alias marina-hotel \
          -dname "CN=Marina Hotel, OU=IT Department, O=Marina Hotel, L=Sana'a, ST=Sana'a, C=YE" \
          -storepass marinahotel2024 \
          -keypass marinahotel2024 \
          -noprompt
        echo "✅ Keystore generated successfully"
      working-directory: ./mobile

    - name: Create key.properties
      run: |
        echo "🔑 Creating key.properties..."
        cat > android/key.properties << EOF
        storePassword=marinahotel2024
        keyPassword=marinahotel2024
        keyAlias=marina-hotel
        storeFile=marina-hotel-key.jks
        EOF
        echo "✅ key.properties created"
      working-directory: ./mobile

    - name: Get Dependencies
      working-directory: ./mobile
      run: flutter pub get

    - name: Build Signed APK
      working-directory: ./mobile
      run: |
        echo "🚀 Building signed APK with Marina Hotel keystore..."
        flutter build apk --release --obfuscate --split-debug-info=build/debug-info
        echo "✅ Signed APK built successfully"

    - name: Build App Bundle (AAB)
      working-directory: ./mobile
      run: |
        echo "📦 Building signed AAB for Google Play Store..."
        flutter build appbundle --release --obfuscate --split-debug-info=build/debug-info
        echo "✅ Signed AAB built successfully"

    - name: Build Split APKs
      working-directory: ./mobile
      run: |
        echo "🔄 Building split APKs by architecture..."
        flutter build apk --release --split-per-abi --obfuscate --split-debug-info=build/debug-info
        echo "✅ Split APKs built successfully"

    - name: Prepare Release Files
      working-directory: ./mobile
      run: |
        echo "📦 Preparing release files..."
        mkdir -p ../release-output
        
        # Get version info
        VERSION=$(grep "version:" pubspec.yaml | cut -d' ' -f2)
        BUILD_NUMBER=$GITHUB_RUN_NUMBER
        DATE=$(date +%Y%m%d)
        COMMIT_SHORT=$(echo $GITHUB_SHA | cut -c1-7)
        
        echo "Version: $VERSION"
        echo "Build: $BUILD_NUMBER"
        echo "Date: $DATE"
        echo "Commit: $COMMIT_SHORT"
        
        # Copy Universal APK
        if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
          cp "build/app/outputs/flutter-apk/app-release.apk" "../release-output/marina-hotel-v${VERSION}-universal-${DATE}-${BUILD_NUMBER}.apk"
          echo "✅ Universal APK copied"
        fi
        
        # Copy Split APKs
        if [ -f "build/app/outputs/flutter-apk/app-arm64-v8a-release.apk" ]; then
          cp "build/app/outputs/flutter-apk/app-arm64-v8a-release.apk" "../release-output/marina-hotel-v${VERSION}-arm64-${DATE}-${BUILD_NUMBER}.apk"
          echo "✅ ARM64 APK copied"
        fi
        
        if [ -f "build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk" ]; then
          cp "build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk" "../release-output/marina-hotel-v${VERSION}-arm32-${DATE}-${BUILD_NUMBER}.apk"
          echo "✅ ARM32 APK copied"
        fi
        
        if [ -f "build/app/outputs/flutter-apk/app-x86_64-release.apk" ]; then
          cp "build/app/outputs/flutter-apk/app-x86_64-release.apk" "../release-output/marina-hotel-v${VERSION}-x86_64-${DATE}-${BUILD_NUMBER}.apk"
          echo "✅ x86_64 APK copied"
        fi
        
        # Copy AAB for Google Play
        if [ -f "build/app/outputs/bundle/release/app-release.aab" ]; then
          cp "build/app/outputs/bundle/release/app-release.aab" "../release-output/marina-hotel-v${VERSION}-playstore-${DATE}-${BUILD_NUMBER}.aab"
          echo "✅ AAB for Play Store copied"
        fi
        
        # Copy debug symbols
        if [ -d "build/debug-info" ]; then
          tar -czf "../release-output/marina-hotel-v${VERSION}-debug-symbols-${DATE}-${BUILD_NUMBER}.tar.gz" -C build debug-info
          echo "✅ Debug symbols archived"
        fi
        
        # Generate checksums
        cd ../release-output
        for file in *.apk *.aab *.tar.gz; do
          if [ -f "$file" ]; then
            sha256sum "$file" >> checksums.txt
          fi
        done
        echo "✅ Checksums generated"

    - name: Generate Release Notes
      run: |
        cd release-output
        cat > RELEASE_NOTES.md << EOF
        # Marina Hotel v$(grep "version:" mobile/pubspec.yaml | cut -d' ' -f2) Release
        
        ## 📱 تطبيق فندق مارينا - إصدار جديد
        
        ### 🎉 المميزات الجديدة:
        - ✅ إدارة شاملة للحجوزات والغرف
        - ✅ نظام مدفوعات متكامل
        - ✅ إدارة المصروفات والرواتب
        - ✅ تقارير مالية مفصلة
        - ✅ عمل بدون إنترنت مع مزامنة تلقائية
        - ✅ واجهة عربية احترافية
        - ✅ نظام إعدادات متقدم
        
        ### 📊 معلومات البناء:
        - **تاريخ البناء:** $(date)
        - **إصدار Flutter:** ${{ env.FLUTTER_VERSION }}
        - **نوع البناء:** ${{ github.event.inputs.release_type || 'release' }}
        - **Commit:** $GITHUB_SHA
        
        ### 📥 ملفات التحميل:
        - **APK للتثبيت المباشر:** marina-hotel-*.apk
        - **AAB لمتجر Google Play:** marina-hotel-*.aab
        - **رموز التشخيص:** marina-hotel-*-debug-symbols.tar.gz
        
        ### 📱 متطلبات التشغيل:
        - Android 5.0 (API 21) أو أحدث
        - مساحة فارغة: 100 MB
        - ذاكرة وصول عشوائي: 2 GB مُوصى بها
        
        ### 🔧 تعليمات التثبيت:
        1. حمل ملف APK
        2. فعّل "مصادر غير معروفة" في إعدادات الأندرويد
        3. ثبت التطبيق
        4. استمتع بإدارة فندقك! 🏨
        
        ---
        
        **تم تطويره بـ ❤️ لفندق مارينا**
        EOF

    - name: Upload Release Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: marina-hotel-release-${{ github.run_number }}
        path: release-output/
        retention-days: 90

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release-output/*.apk
          release-output/*.aab
          release-output/*.tar.gz
        body_path: release-output/RELEASE_NOTES.md
        draft: false
        prerelease: ${{ github.event.inputs.release_type != 'release' }}
        name: Marina Hotel v${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
