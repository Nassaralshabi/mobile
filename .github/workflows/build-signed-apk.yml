name: Build Signed APK - Marina Hotel

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
      - 'capy/*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-signed:
    name: Build and Sign APK
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./app-marina
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Decode Keystore
        run: |
          mkdir -p keystore
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore/marina-hotel-keystore.jks
          
      - name: Create key.properties
        run: |
          echo "storeFile=keystore/marina-hotel-keystore.jks" >> key.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> key.properties
          
      - name: Grant execute permission
        run: chmod +x gradlew
        
      - name: Clean project
        run: ./gradlew clean --stacktrace
        
      - name: Build Debug APK (for testing)
        run: ./gradlew :app:assembleDebug --stacktrace
        
      - name: Build Release APK (signed)
        run: ./gradlew :app:assembleRelease --stacktrace
        
      - name: Get version info
        id: version
        run: |
          VERSION_NAME=$(grep 'versionName = ' app/build.gradle.kts | cut -d'"' -f2)
          VERSION_CODE=$(grep 'versionCode = ' app/build.gradle.kts | cut -d'=' -f2 | tr -d ' ')
          BUILD_TIME=$(date '+%Y%m%d_%H%M%S')
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
          echo "build_time=$BUILD_TIME" >> $GITHUB_OUTPUT
          echo "Version: $VERSION_NAME ($VERSION_CODE) - $BUILD_TIME"
        
      - name: Rename APKs with version info
        run: |
          VERSION_NAME="${{ steps.version.outputs.version_name }}"
          VERSION_CODE="${{ steps.version.outputs.version_code }}"
          BUILD_TIME="${{ steps.version.outputs.build_time }}"
          
          # Create output directory
          mkdir -p apk-outputs
          
          # Rename Debug APK
          if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
            cp app/build/outputs/apk/debug/app-debug.apk \
               apk-outputs/marina-hotel-debug-v${VERSION_NAME}-${BUILD_TIME}.apk
          fi
          
          # Rename Release APK  
          if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
            cp app/build/outputs/apk/release/app-release.apk \
               apk-outputs/marina-hotel-release-v${VERSION_NAME}-${BUILD_TIME}.apk
          fi
          
          # List all created files
          ls -la apk-outputs/
          
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: marina-hotel-debug-apk
          path: app-marina/apk-outputs/*debug*.apk
          retention-days: 30
          
      - name: Upload Signed Release APK
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: marina-hotel-signed-apk
          path: app-marina/apk-outputs/*release*.apk
          retention-days: 90
          
      - name: Create GitHub Release (on tag push)
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: app-marina/apk-outputs/*release*.apk
          name: Marina Hotel v${{ steps.version.outputs.version_name }}
          body: |
            ## 📱 Marina Hotel Management App v${{ steps.version.outputs.version_name }}
            
            **Release Information:**
            - Version: ${{ steps.version.outputs.version_name }} (Build ${{ steps.version.outputs.version_code }})
            - Built: ${{ steps.version.outputs.build_time }}
            - Commit: ${{ github.sha }}
            
            **📦 Files:**
            - `marina-hotel-release-v${{ steps.version.outputs.version_name }}-*.apk` - Signed APK للإنتاج
            
            **✅ Features:**
            - إدارة الحجوزات والغرف
            - نظام المدفوعات والفواتير  
            - تقارير شاملة ولوحة تحكم
            - عمل غير متصل مع مزامنة تلقائية
            
            **🔧 Technical:**
            - Android SDK 24+ (Android 7.0+)
            - Signed APK جاهز للنشر
            - ProGuard enabled للحماية
            
            ---
            *Built automatically with GitHub Actions 🤖*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build Status Summary
        if: always()
        run: |
          echo "## 🏗️ Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Item | Status |" >> $GITHUB_STEP_SUMMARY  
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Version | ${{ steps.version.outputs.version_name }} (${{ steps.version.outputs.version_code }})" >> $GITHUB_STEP_SUMMARY
          echo "| Build Time | ${{ steps.version.outputs.build_time }}" >> $GITHUB_STEP_SUMMARY
          echo "| Debug APK | $([ -f 'apk-outputs/*debug*.apk' ] && echo '✅ Built' || echo '❌ Failed')" >> $GITHUB_STEP_SUMMARY
          echo "| Release APK | $([ -f 'apk-outputs/*release*.apk' ] && echo '✅ Built' || echo '❌ Failed')" >> $GITHUB_STEP_SUMMARY
          echo "| Keystore | ✅ Decoded from secrets" >> $GITHUB_STEP_SUMMARY
          echo "| Signing | ✅ Configured" >> $GITHUB_STEP_SUMMARY