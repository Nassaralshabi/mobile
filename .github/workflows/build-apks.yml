name: 📱 Build Marina Hotel APKs

on:
  push:
    branches: [ main, develop, 'capy/**' ]
    paths:
      - 'mobile/**'
      - 'app-marina/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'mobile/**'
      - 'app-marina/**'
      - '.github/workflows/**'
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'both'
        type: choice
        options:
        - both
        - flutter
        - android

env:
  FLUTTER_VERSION: '3.24.5'
  JAVA_VERSION: '17'
  ANDROID_API_LEVEL: '34'
  ANDROID_BUILD_TOOLS_VERSION: '34.0.0'

jobs:
  # ====================================
  # Flutter App Build Job
  # ====================================
  build-flutter:
    if: ${{ !contains(github.event.head_commit.message, '[skip flutter]') && (github.event.inputs.build_type == 'both' || github.event.inputs.build_type == 'flutter' || github.event.inputs.build_type == '') }}
    name: 🎯 Build Flutter APK
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}

    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true

    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: 📦 Cache Flutter Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.pub-cache
          mobile/.dart_tool
        key: flutter-${{ runner.os }}-${{ hashFiles('mobile/pubspec.lock') }}
        restore-keys: |
          flutter-${{ runner.os }}-

    - name: 🔧 Install Flutter Dependencies
      working-directory: mobile
      run: |
        flutter --version
        flutter doctor -v
        flutter pub get

    - name: 📄 Accept Android Licenses
      run: yes | flutter doctor --android-licenses

    - name: 🏗️ Build Debug APK
      working-directory: mobile
      run: |
        echo "Building Flutter Debug APK..."
        flutter build apk --debug --verbose
        ls -la build/app/outputs/flutter-apk/

    - name: 🏗️ Build Release APK
      working-directory: mobile
      run: |
        echo "Building Flutter Release APK..."
        flutter build apk --release --verbose
        ls -la build/app/outputs/flutter-apk/

    - name: 📊 APK Info
      working-directory: mobile
      run: |
        echo "=== Flutter APK Build Results ==="
        if [ -f "build/app/outputs/flutter-apk/app-debug.apk" ]; then
          echo "✅ Debug APK: $(ls -lh build/app/outputs/flutter-apk/app-debug.apk | awk '{print $5}')"
        fi
        if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
          echo "✅ Release APK: $(ls -lh build/app/outputs/flutter-apk/app-release.apk | awk '{print $5}')"
        fi

    - name: 📤 Upload Flutter APKs
      uses: actions/upload-artifact@v4
      with:
        name: flutter-apks-${{ github.sha }}
        path: |
          mobile/build/app/outputs/flutter-apk/*.apk
        retention-days: 30

  # ====================================
  # Android Native App Build Job
  # ====================================
  build-android:
    if: ${{ !contains(github.event.head_commit.message, '[skip android]') && (github.event.inputs.build_type == 'both' || github.event.inputs.build_type == 'android' || github.event.inputs.build_type == '') }}
    name: 🤖 Build Android Native APK
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}

    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: 📦 Cache Gradle Dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          app-marina/.gradle
        key: gradle-${{ runner.os }}-${{ hashFiles('app-marina/**/*.gradle*', 'app-marina/gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - name: 🔑 Make Gradlew Executable
      working-directory: app-marina
      run: chmod +x ./gradlew

    - name: 🧹 Clean Project
      working-directory: app-marina
      run: ./gradlew clean

    - name: 🏗️ Build Debug APK
      working-directory: app-marina
      run: |
        echo "Building Android Debug APK..."
        ./gradlew assembleDebug --stacktrace --info
        ls -la app/build/outputs/apk/debug/

    - name: 🏗️ Build Release APK
      working-directory: app-marina
      run: |
        echo "Building Android Release APK..."
        ./gradlew assembleRelease --stacktrace --info
        ls -la app/build/outputs/apk/release/

    - name: 📊 APK Info
      working-directory: app-marina
      run: |
        echo "=== Android APK Build Results ==="
        if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
          echo "✅ Debug APK: $(ls -lh app/build/outputs/apk/debug/app-debug.apk | awk '{print $5}')"
        fi
        if [ -f "app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
          echo "✅ Release APK: $(ls -lh app/build/outputs/apk/release/app-release-unsigned.apk | awk '{print $5}')"
        fi

    - name: 📤 Upload Android APKs
      uses: actions/upload-artifact@v4
      with:
        name: android-apks-${{ github.sha }}
        path: |
          app-marina/app/build/outputs/apk/**/*.apk
        retention-days: 30

  # ====================================
  # Create Combined Release
  # ====================================
  combine-apks:
    name: 📦 Combine APK Artifacts
    runs-on: ubuntu-latest
    needs: [build-flutter, build-android]
    if: always() && (needs.build-flutter.result == 'success' || needs.build-android.result == 'success')
    
    steps:
    - name: 📥 Download Flutter APKs
      if: needs.build-flutter.result == 'success'
      uses: actions/download-artifact@v4
      with:
        name: flutter-apks-${{ github.sha }}
        path: ./apks/flutter/

    - name: 📥 Download Android APKs
      if: needs.build-android.result == 'success'
      uses: actions/download-artifact@v4
      with:
        name: android-apks-${{ github.sha }}
        path: ./apks/android/

    - name: 🏷️ Rename APK Files
      run: |
        mkdir -p ./marina-hotel-apks
        
        # Rename Flutter APKs
        if [ -d "./apks/flutter/" ]; then
          find ./apks/flutter/ -name "*.apk" | while read file; do
            if [[ $file == *"debug"* ]]; then
              cp "$file" "./marina-hotel-apks/marina-flutter-debug.apk"
            elif [[ $file == *"release"* ]]; then
              cp "$file" "./marina-hotel-apks/marina-flutter-release.apk"
            fi
          done
        fi
        
        # Rename Android APKs
        if [ -d "./apks/android/" ]; then
          find ./apks/android/ -name "*.apk" | while read file; do
            if [[ $file == *"debug"* ]]; then
              cp "$file" "./marina-hotel-apks/marina-android-debug.apk"
            elif [[ $file == *"release"* ]]; then
              cp "$file" "./marina-hotel-apks/marina-android-release.apk"
            fi
          done
        fi
        
        ls -la ./marina-hotel-apks/

    - name: 📝 Create Release Info
      run: |
        cat > ./marina-hotel-apks/README.md << 'EOF'
        # 🏨 Marina Hotel Mobile Apps
        
        ## 📱 APK Files
        
        ### Flutter App
        - `marina-flutter-debug.apk` - Flutter debug build
        - `marina-flutter-release.apk` - Flutter release build
        
        ### Android Native App  
        - `marina-android-debug.apk` - Android native debug build
        - `marina-android-release.apk` - Android native release build
        
        ## 🔐 Login Credentials
        - **Username**: `admin`
        - **Password**: `1234`
        
        ## 📋 Features
        - ✅ Both apps configured with admin/1234 login
        - ✅ Offline authentication support (Flutter)
        - ✅ Auto-create admin user on first launch (Android)
        - ✅ Hotel management functionality
        - ✅ Booking, payments, rooms management
        
        ## 🚀 Installation
        1. Enable "Unknown sources" in Android settings
        2. Install APK file
        3. Launch app and login with admin/1234
        
        **Built on**: $(date)
        **Commit**: ${{ github.sha }}
        **Branch**: ${{ github.ref_name }}
        EOF

    - name: 📤 Upload Combined APKs
      uses: actions/upload-artifact@v4
      with:
        name: marina-hotel-apks
        path: ./marina-hotel-apks/
        retention-days: 90

  # ====================================
  # Notification Job
  # ====================================
  notify:
    name: 📢 Build Notification
    runs-on: ubuntu-latest
    needs: [build-flutter, build-android, combine-apks]
    if: always()
    
    steps:
    - name: 📊 Build Summary
      run: |
        echo "## 🏨 Marina Hotel APK Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|---------|" >> $GITHUB_STEP_SUMMARY
        echo "| Flutter App | ${{ needs.build-flutter.result == 'success' && '✅ Success' || needs.build-flutter.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Android App | ${{ needs.build-android.result == 'success' && '✅ Success' || needs.build-android.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Combined APKs | ${{ needs.combine-apks.result == 'success' && '✅ Success' || needs.combine-apks.result == 'skipped' && '⏭️ Skipped' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔐 Login Credentials" >> $GITHUB_STEP_SUMMARY
        echo "- **Username**: \`admin\`" >> $GITHUB_STEP_SUMMARY  
        echo "- **Password**: \`1234\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📥 Download APKs" >> $GITHUB_STEP_SUMMARY
        echo "Check the **Artifacts** section below to download APK files." >> $GITHUB_STEP_SUMMARY